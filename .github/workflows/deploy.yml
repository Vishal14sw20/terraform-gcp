name: Terraform CI/CD

on:
  push:
    branches:
      - dev
      - prod
  pull-request:

jobs:
  terraform:
    name: Terraform Pipeline
    runs-on: ubuntu-latest

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init
        working-directory: env/${{ github.ref_name }}

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: env/${{ github.ref_name }}
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
              const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
              #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
              #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
              
              <details><summary>Show Plan</summary>
              
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
              
              </details>
              
              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })



      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1


      - name: Terraform Apply (Dev Only)
        if: github.ref_name == 'dev' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: env/dev

      - name: Terraform Apply (Prod with Approval)
        if: github.ref_name == 'prod' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: env/prod
